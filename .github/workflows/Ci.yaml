name: cicd-python
on:
  push:
    branches:
      - main
env:     
  IMAGE: mywebsite
  DOCKERHUB_USERNAME: shiva9921 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.9",]

    steps:
      - name: code Checkout
        uses: actions/checkout@v3
        with:
           fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  
          
      - name: Test with pytest
        run: |
          pytest --cov=main test_main.py --junitxml=./output.xml 
          python3 -m coverage xml
          ls
          cat coverage.xml
          pwd

      - name: Linting
        run: |
          find . -name \*.py | xargs pylint -f parseable | tee pylint.log
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
          
      #STEP 6 Dockerhub login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    #STEP 7 Docker Build and Push
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{env.DOCKERHUB_USERNAME}}/${{env.IMAGE}}:${{github.run_number}} 
      
   #STEP 8 Kubernetes Deployment
  
   
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB1_TOKEN }}
          repository: ${{ github.actor }}/argocd-deployment
          event-type: new-image
          client-payload: '{"image": "${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE }}:${{ github.run_number }}"}'     
    
